{"version":3,"file":"index.js","sources":["../src/components/index.vue","../node_modules/style-inject/dist/style-inject.es.js","../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../src/index.js"],"sourcesContent":["<template>\n  <div class=\"el-select-tree\">\n    <el-popover\n      ref=\"elPopover\"\n      v-model=\"visible\"\n      transition=\"el-zoom-in-top\"\n      popper-class=\"el-select-tree__popover\"\n      trigger=\"click\"\n      :disabled=\"disabled\"\n      :placement=\"placement\"\n      @after-enter=\"handleScroll()\"\n    >\n      <!-- scrollbar wrap -->\n      <el-scrollbar\n        v-if=\"dataLength\"\n        wrap-class=\"el-select-dropdown__wrap\"\n        view-class=\"el-select-dropdown__list\"\n        ref=\"scrollbar\"\n        :class=\"{ 'is-empty': dataLength === 0 }\"\n      >\n        <el-tree\n          ref=\"elTree\"\n          class=\"el-select-tree__list\"\n          :default-expand-all=\"defaultExpandAll\"\n          :props=\"props\"\n          :node-key=\"propsValue\"\n          :show-checkbox=\"multiple\"\n          :expand-on-click-node=\"multiple\"\n          :data=\"data\"\n          :default-expanded-keys=\"defaultExpandedKeys\"\n          :check-strictly=\"checkStrictly\"\n          @node-click=\"nodeClick\"\n          @check-change=\"checkChange\"\n        >\n          <div\n            class=\"el-select-tree__item\"\n            slot-scope=\"{ data }\"\n            :class=\"treeItemClass(data)\"\n          >\n            {{ data[propsLabel] }}\n          </div>\n        </el-tree>\n      </el-scrollbar>\n\n      <!-- empty text -->\n      <p class=\"el-select-tree__empty\" v-else>\n        无数据\n      </p>\n\n      <!-- trigger input -->\n      <el-input\n        v-model=\"selectedLabel\"\n        ref=\"reference\"\n        slot=\"reference\"\n        readonly\n        :validate-event=\"false\"\n        :size=\"size\"\n        :class=\"{\n          'is-active': visible,\n          'is-selected': selectedLabel,\n          'is-clearable': clearable\n        }\"\n        :disabled=\"disabled\"\n        :placeholder=\"placeholder\"\n      >\n        <i\n          v-if=\"clearable\"\n          @click.stop=\"clear()\"\n          slot=\"suffix\"\n          class=\"el-input__icon el-input__icon-close el-icon-circle-close\"\n        ></i>\n        <i\n          slot=\"suffix\"\n          class=\"el-input__icon el-input__icon-arrow-down el-icon-arrow-down\"\n        ></i>\n      </el-input>\n    </el-popover>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport Emitter from 'element-ui/lib/mixins/emitter';\n\nimport treeFind from 'operation-tree-node/dist/treeFind.esm';\nimport treeEach from 'operation-tree-node/dist/treeEach.esm';\n\nexport default {\n  name: 'ElSelectTree',\n  mixins: [Emitter],\n  model: {\n    prop: 'value',\n    event: 'change'\n  },\n  props: {\n    clearable: Boolean,\n    defaultExpandAll: Boolean,\n    checkStrictly: Boolean,\n    placeholder: {\n      type: String,\n      default: '请选择'\n    },\n    props: {\n      type: Object,\n      default() {\n        return {\n          value: 'value',\n          label: 'label',\n          children: 'children'\n        };\n      }\n    },\n    placement: {\n      type: String,\n      default: 'bottom-start'\n    },\n    size: {\n      type: String,\n      default: Vue.prototype.$ELEMENT ? Vue.prototype.$ELEMENT.size : ''\n    },\n    popoverMinWidth: {\n      type: Number,\n      default: 0\n    },\n    disabled: Boolean,\n    multiple: Boolean,\n    value: {\n      type: [Number, String, Array],\n      default: ''\n    },\n    disabledValues: {\n      type: Array,\n      default() {\n        return [];\n      }\n    },\n    data: {\n      type: Array,\n      default() {\n        return [];\n      }\n    }\n  },\n  computed: {\n    dataLength() {\n      return this.data.length;\n    },\n    propsValue() {\n      return this.props.value;\n    },\n    propsLabel() {\n      return this.props.label;\n    },\n    defaultExpandedKeys() {\n      return Array.isArray(this.value) ? this.value : [this.value];\n    }\n  },\n  data() {\n    return {\n      visible: false,\n      selectedLabel: ''\n    };\n  },\n  methods: {\n    valueChange(value) {\n      this.$emit('change', value);\n      // trigger el-form event\n      // like validator\n      this.dispatch('ElFormItem', 'el.form.change', value);\n    },\n    clear() {\n      this.visible = false;\n      if (this.multiple) {\n        this.valueChange([]);\n        this.$nextTick(() => {\n          this.$refs.elTree.setCheckedKeys([]);\n        });\n      } else {\n        this.valueChange('');\n      }\n    },\n    // 触发滚动条的重置\n    handleScroll() {\n      this.$refs.scrollbar && this.$refs.scrollbar.handleScroll();\n    },\n    nodeClick(data, node, component) {\n      const children = data[this.props.children];\n      const value = data[this.propsValue];\n\n      if (children && !this.checkStrictly) {\n        component.handleExpandIconClick();\n      } else if (!this.disabledValues.includes(value) && !this.multiple) {\n        if (value !== this.value) {\n          this.valueChange(value);\n          this.selectedLabel = data[this.propsLabel];\n        }\n        this.visible = false;\n      }\n    },\n    checkChange() {\n      this.valueChange(this.$refs.elTree.getCheckedKeys(!this.checkStrictly));\n      this.setSelectedLabel();\n    },\n    checkSelected(value) {\n      if (this.multiple) {\n        return this.value.includes(value);\n      } else {\n        return this.value === value;\n      }\n    },\n    setSelected() {\n\n      const propsValue = this.propsValue;\n      const value = this.value;\n\n      if (String(value).length) {\n        if (this.multiple) {\n          this.$nextTick(() => {\n            this.$refs.elTree.setCheckedKeys(this.value);\n            this.setSelectedLabel();\n          });\n        } else {\n          const selectedNode = treeFind(\n            this.data,\n            (node) => this.checkSelected(node[propsValue]),\n            this.props\n          );\n          if (selectedNode) {\n            this.selectedLabel = selectedNode[this.propsLabel];\n          } else {\n            this.selectedLabel = '';\n          }\n        }\n      } else {\n        this.selectedLabel = '';\n      }\n    },\n    setTreeDataState() {\n      const disabledValues = this.disabledValues;\n      treeEach(this.data, (node) => {\n        node.disabled = disabledValues.includes(node[this.propsValue]);\n      });\n    },\n    setSelectedLabel() {\n      const elTree = this.$refs.elTree;\n      const selectedNodes = elTree.getCheckedNodes(!this.checkStrictly);\n      this.selectedLabel = selectedNodes\n        .map((item) => item[this.propsLabel])\n        .join(',');\n    },\n    treeItemClass(data) {\n      const value = data[this.propsValue];\n      return {\n        selected: this.multiple ? false : this.checkSelected(value),\n        'is-disabled': this.disabledValues.includes(value)\n      };\n    }\n  },\n  watch: {\n    value() {\n      this.setSelected();\n    },\n    data() {\n      this.setTreeDataState();\n      this.setSelected();\n    },\n    disabledValues() {\n      this.setTreeDataState();\n    }\n  },\n  created() {\n    if (this.multiple && !Array.isArray(this.value)) {\n      console.error(\n        '[el-select-tree]:',\n        'props `value` must be Array if use multiple!'\n      );\n    }\n    this.setTreeDataState();\n  },\n  mounted() {\n    this.setSelected();\n    // set the `popper` default `min-width`\n    this.$nextTick(() => {\n      const popper = this.$refs.elPopover.$refs.popper;\n      let width;\n      if (!this.popoverMinWidth) {\n        const clientWidth = this.$el.clientWidth;\n        if (!clientWidth) {\n          console.log(\n            '[el-select-warn]:',\n            'can not get `width`, please set the `popoverMinWidth`'\n          );\n        }\n        width = clientWidth;\n      } else {\n        width = this.popoverMinWidth;\n      }\n      width && (popper.style.minWidth = width + 'px');\n    });\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import '../styles/common-variables';\n\n.el-select-tree {\n  display: inline-block;\n  .el-input__icon {\n    cursor: pointer;\n    transition: transform 0.3s;\n    &-close {\n      display: none;\n    }\n  }\n  .el-input__inner {\n    cursor: pointer;\n    padding-right: 30px;\n  }\n  .el-input {\n    &:hover:not(.is-disabled) {\n      .el-input__inner {\n        border-color: $--input-border-color-hover;\n      }\n      &.is-selected.is-clearable {\n        .el-input__icon {\n          &-close {\n            display: inline-block;\n          }\n          &-arrow-down {\n            display: none;\n          }\n        }\n      }\n    }\n    &.is-active {\n      .el-input__icon-arrow-down {\n        transform: rotate(-180deg);\n      }\n      .el-input__inner {\n        border-color: $--button-primary-border-color;\n      }\n    }\n  }\n  &__popover {\n    padding: 0 !important;\n\n    // extends el-select-dropdown - start\n    border: $--select-dropdown-border !important;\n    border-radius: $--border-radius-base !important;\n    // extends el-select-dropdown - end\n\n    .popper__arrow {\n      left: 35px !important;\n    }\n\n    .el-tree-node__expand-icon.is-leaf {\n      cursor: pointer;\n    }\n  }\n  &__list {\n    overflow-y: auto;\n\n    // scroll style - start\n    &::-webkit-scrollbar-track-piece {\n      background: #d3dce6;\n    }\n    &::-webkit-scrollbar {\n      width: 4px;\n    }\n    &::-webkit-scrollbar-thumb {\n      background: #99a9bf;\n    }\n    // scroll style - end\n  }\n  &__item {\n    position: relative;\n    white-space: nowrap;\n    padding-right: $spacing-medium;\n    &.selected {\n      color: $--select-option-selected-font-color;\n      font-weight: bolder;\n    }\n    &.is-disabled {\n      color: $--font-color-disabled-base;\n      cursor: not-allowed;\n    }\n  }\n  &__empty {\n    padding: $--select-dropdown-empty-padding;\n    margin: 0;\n    text-align: center;\n    color: $--select-dropdown-empty-color;\n    font-size: $--select-font-size;\n  }\n}\n</style>\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","// 主组件\nimport ElSelectTree from './components/index';\n\n// Vue.use()\nElSelectTree.install = (Vue) => {\n  Vue.component('ElSelectTree', ElSelectTree);\n};\n\n// Vue.component()\nexport default ElSelectTree;\n"],"names":["styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ElSelectTree","install","Vue","component"],"mappings":"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"}